/**
 * spi
 * Joshua Vasquez
 * September 26, 2014
 */

module spi( input logic cs, sck, mosi, 
            output logic MISO, 
            output logic [7:0] LEDsOut);

    spiCore spiInst(.cs(cs), .sck(sck), .mosi(mosi),
                    .dataToSend(8'b11110000), .miso(miso),
                    .dataReceived(LEDsOut));

endmodule


module spiCore( input logic cs, sck, mosi,
            input logic [7:0] dataToSend, 
            output logic miso,
            output logic [7:0] dataReceived);

    logic [7:0] shiftReg;
    logic notCs;
    
    assign notCs = ~cs;

    assign validClk = cs ? 0   :
                           sck;

    
    always_ff @ (posedge validClk, posedge notCs)
    begin
        if (notCs)
            shiftReg[7:0] <= dataToSend[7:0];
        else
        begin
        // Handle Output.
            shiftReg[7:0] <= (shiftReg[7:0] >> 1);
        // Handle Input.
            dataReceived[6:0] <= dataReceived[7:1];  
            dataReceived[7] <= mosi;
        end
    end

    assign miso = shiftReg[0];

endmodule


 
 
